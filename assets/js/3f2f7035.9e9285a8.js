"use strict";(self.webpackChunksapzil_org=self.webpackChunksapzil_org||[]).push([[3029],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),p=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},c=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),u=p(n),m=r,E=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(E,l(l({ref:e},c),{},{components:n})):a.createElement(E,l({ref:e},c))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9749:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={layout:"post",title:"SQL \ud2b8\ub79c\uc7ad\uc158 - \ubbff\ub294 \ub3c4\ub07c\uc5d0 \ubc1c\ub4f1 \ucc0d\ud78c\ub2e4",tags:["database"]},l=void 0,i={permalink:"/2017/04/01/do-not-trust-sql-transaction",source:"@site/blog/2017-04-01-do-not-trust-sql-transaction.md",title:"SQL \ud2b8\ub79c\uc7ad\uc158 - \ubbff\ub294 \ub3c4\ub07c\uc5d0 \ubc1c\ub4f1 \ucc0d\ud78c\ub2e4",description:"RDBMS\ub97c \uc4f0\ub294 \uc774\uc720 \uc911 \ud558\ub098\ub294 \ud2b8\ub79c\uc7ad\uc158\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc RDBMS\uc758 \ud2b8\ub79c\uc7ad\uc158\uc744 \ub108\ubb34 \ubbff\ub2e4\uac00\ub294 \uae5c\uc9dd \ub180\ub784 \uc77c\uc774 \ubc8c\uc5b4\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.",date:"2017-04-01T00:00:00.000Z",formattedDate:"2017\ub144 4\uc6d4 1\uc77c",tags:[{label:"database",permalink:"/tags/database"}],readingTime:5.81,hasTruncateMarker:!1,authors:[],frontMatter:{layout:"post",title:"SQL \ud2b8\ub79c\uc7ad\uc158 - \ubbff\ub294 \ub3c4\ub07c\uc5d0 \ubc1c\ub4f1 \ucc0d\ud78c\ub2e4",tags:["database"]},prevItem:{title:"Diff Monster\ub97c \uc18c\uac1c\ud569\ub2c8\ub2e4",permalink:"/2017/07/10/diffmonster"},nextItem:{title:"RESTful API \uc11c\ubc84 \ud14c\uc2a4\ud2b8\ud558\uae30",permalink:"/2017/03/12/testing-restful-api-servers"}},s={authorsImageUrls:[]},p=[{value:"\ubb38\uc81c",id:"\ubb38\uc81c",level:2},{value:"\uc65c\uc8e0?",id:"\uc65c\uc8e0",level:2},{value:"\ud574\uacb0\ucc45",id:"\ud574\uacb0\ucc45",level:2},{value:"Isolation level \ub192\uc774\uae30",id:"isolation-level-\ub192\uc774\uae30",level:3},{value:"<code>SELECT FOR UPDATE</code> \uc0ac\uc6a9",id:"select-for-update-\uc0ac\uc6a9",level:3},{value:"<code>UPDATE</code> \ud55c\ubc88\uc5d0 \ubaa8\ub4e0 \uac83\uc744 \ucc98\ub9ac",id:"update-\ud55c\ubc88\uc5d0-\ubaa8\ub4e0-\uac83\uc744-\ucc98\ub9ac",level:3},{value:"\ub099\uad00\uc801(optimistic) \ub77d",id:"\ub099\uad00\uc801optimistic-\ub77d",level:3},{value:"\uacb0\ub860",id:"\uacb0\ub860",level:2}],c={toc:p};function d(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"RDBMS\ub97c \uc4f0\ub294 \uc774\uc720 \uc911 \ud558\ub098\ub294 \ud2b8\ub79c\uc7ad\uc158\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc RDBMS\uc758 \ud2b8\ub79c\uc7ad\uc158\uc744 \ub108\ubb34 \ubbff\ub2e4\uac00\ub294 \uae5c\uc9dd \ub180\ub784 \uc77c\uc774 \ubc8c\uc5b4\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("figure",null,(0,r.kt)("img",{src:"/public/img/lsm.jpg",alt:"\uad6d\ubbfc \uc5ec\ub7ec\ubd84 \uc548\uc2ec\ud558\uc2ed\uc2dc\uc624"}),(0,r.kt)("figcaption",null,"??? : ",(0,r.kt)("a",{href:"https://librewiki.net/wiki/%EC%9D%B4%EC%8A%B9%EB%A7%8C"},"\uad6d\ubbfc \uc5ec\ub7ec\ubd84 \uc548\uc2ec\ud558\uc2ed\uc2dc\uc624"))),(0,r.kt)("h2",{id:"\ubb38\uc81c"},"\ubb38\uc81c"),(0,r.kt)("p",null,"\ub2e4\uc74c\uacfc \uac19\uc774 \uc5bc\ud54f \ubcf4\uba74 \ubb34\ud574\ud574 \ubcf4\uc774\ub294 \ucf54\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'# CREATE TABLE account (id integer, money integer, state text);\n# INSERT INTO account (id, money, state) VALUES (1, 10, \'poor\');\n\ntx = begin()\nstate = tx.query("SELECT state FROM account WHERE id = 1")\nif state == "poor":\n    tx.query("UPDATE account SET state = \'rich\', money = money * 1000 WHERE id = 1")\ntx.commit()\n')),(0,r.kt)("p",null,"\uc774\ub7f0 \ucf54\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 \ub2e4\uc74c \uc21c\uc11c\ub85c \uc2e4\ud589\ub418\uba74 \uc5b4\ub5a4 \uc77c\uc774 \ubc8c\uc5b4\uc9c8\uae4c\uc694?"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\ud2b8\ub79c\uc7ad\uc158 A"),(0,r.kt)("th",{parentName:"tr",align:null},"\ud2b8\ub79c\uc7ad\uc158 B"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BEGIN"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SELECT state FROM account WHERE id = 1"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"BEGIN")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"SELECT state FROM account WHERE id = 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"UPDATE account SET state = 'rich', money = money * 1000 WHERE id = 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"COMMIT")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"UPDATE account SET state = 'rich', money = money * 1000 WHERE id = 1"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"COMMIT"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"money\uac00 10,000,000\uc774 \ub429\ub2c8\ub2e4."),(0,r.kt)("h2",{id:"\uc65c\uc8e0"},"\uc65c\uc8e0?"),(0,r.kt)("p",null,"SQL \ud45c\uc900\uc5d0\uc11c isolation level\uc740 READ UNCOMMITTED, READ COMMITTED, REPEATABLE READ, SERIALIZABLE \ub124 \uac00\uc9c0\uc785\ub2c8\ub2e4.\nSERIALIZABLE\uc774 \uac00\uc7a5 \ub192\uc740 \uaca9\ub9ac\uc218\uc900\uc774\uc9c0\ub9cc \uc131\ub2a5 \uc0c1\uc758 \uc774\uc720\ub85c ",(0,r.kt)("a",{parentName:"p",href:"https://dev.mysql.com/doc/refman/5.7/en/innodb-transaction-isolation-levels.html"},"MySQL (InnoDB)\uc740 REPEATABLE READ"),", ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/transaction-iso.html"},"PostgreSQL\uc740 READ COMMITTED"),"\uac00 \uae30\ubcf8\uac12\uc785\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uc774\ub7ec\ud55c \uae30\ubcf8 isolation level\uc5d0\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},"UPDATE")," \ucffc\ub9ac\ub294 \ub300\uc0c1 \ub808\ucf54\ub4dc\ub97c \ub2e4\ub978 \ud2b8\ub79c\uc7ad\uc158\uc774 \uba3c\uc800 \uc5c5\ub370\uc774\ud2b8\ud55c \ub4a4 \ucee4\ubc0b\ub41c \uacbd\uc6b0 \uc5c5\ub370\uc774\ud2b8 \ub41c \ub370\uc774\ud130\ub97c \ubcf4\uac8c \ub429\ub2c8\ub2e4."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"... a target row might have already been updated (or deleted or locked) by another concurrent transaction by the time it is found. In this case, the would-be updater will wait for the first updating transaction to commit or roll back (if it is still in progress). ... If the first updater commits, the second updater ... ",(0,r.kt)("strong",{parentName:"p"},"will attempt to apply its operation to the updated version of the row.")," ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/transaction-iso.html#XACT-READ-COMMITTED"},"(Postgres \ubb38\uc11c)"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The snapshot of the database state applies to SELECT statements within a transaction, not necessarily to DML statements. If you insert or modify some rows and then commit that transaction, a DELETE or UPDATE statement issued from another concurrent REPEATABLE READ transaction could affect those just-committed rows, even though the session could not query them. ",(0,r.kt)("a",{parentName:"p",href:"https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html"},"(MySQL \ubb38\uc11c)"))),(0,r.kt)("h2",{id:"\ud574\uacb0\ucc45"},"\ud574\uacb0\ucc45"),(0,r.kt)("h3",{id:"isolation-level-\ub192\uc774\uae30"},"Isolation level \ub192\uc774\uae30"),(0,r.kt)("p",null,"MySQL\uc5d0\uc11c\ub294 SERIALIZABLE \ubc16\uc5d0 \ub2f5\uc774 \uc5c6\ub294\ub370 \uc774 \uacbd\uc6b0\uc5d0 \ud56d\uc0c1 \ub77d\uc774 \uac78\ub9ac\ubbc0\ub85c \ud604\uc2e4\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uae30 \ud798\ub4ed\ub2c8\ub2e4."),(0,r.kt)("p",null,"Postgres\ub294 REPEATABLE READ\ub85c \uc62c\ub9ac\uba74 \uc774\ub7ec\ud55c \ubb38\uc81c\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 \ud2b8\ub79c\uc7ad\uc158 A\uac00 ",(0,r.kt)("inlineCode",{parentName:"p"},"UPDATE"),"\ub97c \uc2dc\ub3c4\ud560 \ub54c \ud2b8\ub79c\uc7ad\uc158\uc774 \uc911\ub2e8\ub418\uc5b4 \ubc84\ub9ac\ubbc0\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub2e8\uc5d0\uc11c \uc804\uccb4 \ud2b8\ub79c\uc7ad\uc158\uc744 \ucc98\uc74c\ubd80\ud130 \uc7ac\uc2dc\ub3c4\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"a target row might have already been updated (or deleted or locked) by another concurrent transaction by the time it is found. In this case, the repeatable read transaction will wait for the first updating transaction to commit or roll back (if it is still in progress). ... if the first updater commits (and actually updated or deleted the row, not just locked it) then the repeatable read transaction ",(0,r.kt)("strong",{parentName:"p"},"will be rolled back")," with the message ",(0,r.kt)("inlineCode",{parentName:"p"},"ERROR:  could not serialize access due to concurrent update")," because a repeatable read transaction cannot modify or lock rows changed by other transactions after the repeatable read transaction began. ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/transaction-iso.html#XACT-REPEATABLE-READ"},"(Postgres \ubb38\uc11c)"))),(0,r.kt)("h3",{id:"select-for-update-\uc0ac\uc6a9"},(0,r.kt)("inlineCode",{parentName:"h3"},"SELECT FOR UPDATE")," \uc0ac\uc6a9"),(0,r.kt)("p",null,"\uc5c5\ub370\uc774\ud2b8 \ud560 \ub808\ucf54\ub4dc\ub97c \uac00\uc838\uc62c \ub54c ",(0,r.kt)("inlineCode",{parentName:"p"},"SELECT")," \ucffc\ub9ac \ub300\uc2e0 ",(0,r.kt)("inlineCode",{parentName:"p"},"SELECT FOR UPDATE")," \ubb38\uc744 \uc0ac\uc6a9\ud558\uba74 \ub77d\uc774 \uac78\ub9bd\ub2c8\ub2e4.\n\uadf8\ub7ec\uba74 \ud2b8\ub79c\uc7ad\uc158 B\uac00 \uc77d\uae30\ub97c \uc2dc\ub3c4\ud560 \ub54c \ud2b8\ub79c\uc7ad\uc158 A\uac00 \ucee4\ubc0b (\ub610\ub294 \ub864\ubc31)\ub418\uae30\uae4c\uc9c0 \uae30\ub2e4\ub9ac\uac8c \ub418\ubbc0\ub85c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h3",{id:"update-\ud55c\ubc88\uc5d0-\ubaa8\ub4e0-\uac83\uc744-\ucc98\ub9ac"},(0,r.kt)("inlineCode",{parentName:"h3"},"UPDATE")," \ud55c\ubc88\uc5d0 \ubaa8\ub4e0 \uac83\uc744 \ucc98\ub9ac"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SELECT"),"\ub97c \ud558\uc9c0 \ub9d0\uace0 ",(0,r.kt)("inlineCode",{parentName:"p"},"UPDATE account SET state = 'rich', money = money * 1000 WHERE id = 1 AND state = 'poor'"),"\uc640 \uac19\uc774 \ucc98\ub9ac\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub807\uac8c \ud558\uba74 \ub85c\uc9c1\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucf54\ub4dc\uc5d0\uc11c SQL\ub85c \uc62e\uaca8\uac00\uae30\ub294 \ud558\uc9c0\ub9cc \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ucee4\ubc0b\ub41c \ub370\uc774\ud130\ub97c \uae30\uc900\uc73c\ub85c \uc791\ub3d9\ud574\uc11c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h3",{id:"\ub099\uad00\uc801optimistic-\ub77d"},"\ub099\uad00\uc801(optimistic) \ub77d"),(0,r.kt)("p",null,"\ud14c\uc774\ube14\uc5d0 \ubc84\uc804 \ud544\ub4dc\ub97c \ucd94\uac00\ud574\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},"SELECT"),"\ud560 \ub54c \uac00\uc838\uc635\ub2c8\ub2e4. \uadf8\ub9ac\uace0 ",(0,r.kt)("inlineCode",{parentName:"p"},"UPDATE"),"\ud560 \ub54c WHERE \uc808\uc5d0 \uae30\uc874 \ubc84\uc804\uc744 \ucd94\uac00\ud558\uace0 +1\ub41c \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub97c \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc5c5\ub370\uc774\ud2b8 \ub41c \ub808\ucf54\ub4dc \uc218\ub97c \uac80\uc0ac\ud574\uc11c 0\uac1c\ub77c\uba74 \ub2e4\ub978 \ud2b8\ub79c\uc7ad\uc158\uc5d0\uc11c \ubc84\uc804\uc774 \ubcc0\uacbd\ub41c \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c ",(0,r.kt)("strong",{parentName:"p"},"\ucda9\ub3cc"),"\uc744 \uac10\uc9c0\ud55c \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub2e8\uc5d0\uc11c \uc804\uccb4 \ud2b8\ub79c\uc7ad\uc158\uc744 \ucc98\uc74c\ubd80\ud130 \uc7ac\uc2dc\ub3c4\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.jboss.org/hibernate/orm/4.0/devguide/en-US/html/ch05.html"},"ORM\uc5d0\uc11c \ub099\uad00\uc801 \ub77d \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uacbd\uc6b0\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("h2",{id:"\uacb0\ub860"},"\uacb0\ub860"),(0,r.kt)("p",null,"\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc77d\uc740 \ub2e4\uc74c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ucc98\ub9ac \ud6c4 \ub2e4\uc2dc \uc4f0\ub294 \uacbd\uc6b0\uc5d0 \uc8fc\uc758\uac00 \ud544\uc694\ud569\ub2c8\ub2e4."))}d.isMDXComponent=!0}}]);